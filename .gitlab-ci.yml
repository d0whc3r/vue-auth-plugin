image: node:12

cache:
  key: "$CI_BUILD_REF_NAME"
  paths:
    - node_modules
    - demo/node_modules
    - .yarn-cache
    - .scannerwork
    - /root/.sonar

stages:
  - install
  - test
  - analysis
  - docs
  - publish

before_script:
  - export GH_REPO=https://${GH_TOKEN}:x-oauth-basic@github.com/d0whc3r/vue-auth-plugin

install-deps:
  stage: install
  script:
    - yarn install --cache-folder .yarn-cache
    - (cd demo && yarn install --cache-folder ../.yarn-cache)
    - yarn build

tests:
  stage: test
  script:
    - yarn test:coverage
    - yarn test:send-coverages
  coverage: '/All files\s*\|\s*([\d.]+)/'
  artifacts:
    paths:
      - coverage
    expire_in: 30 days

sonarqube-reports-master:
  stage: analysis
  image: timbru31/java-node
  only:
    - master
  script:
    - yarn sonar-scanner -Dsonar.login=${SONAR_TOKEN} -Duser.home=./

sonarqube-reports-branch:
  stage: analysis
  image: timbru31/java-node
  except:
    - master
  script:
    - yarn sonar-scanner -Dsonar.login=${SONAR_TOKEN} -Dsonar.branch.name=${CI_BUILD_REF_NAME} -Dsonar.branch.target=master -Duser.home=./

documentation:
  stage: docs
  only:
    - master
  script:
    - yarn docs:build
    - git config --global user.email "ghpages@gitlab"
    - git config --global user.name "Gitlab CI"
    - yarn gh-pages -d docs/.vuepress/dist -r ${GH_REPO}
    - mv docs/.vuepress/dist/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days

publish-npm-patch:
  stage: publish
  when: manual
  only:
    - master
  script:
    - git config --global user.email "ghpages@gitlab"
    - git config --global user.name "Gitlab CI"
    - git remote set-url origin ${GH_REPO}
    - git checkout master
    - yarn version --patch
    - yarn build
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
    - npm publish

publish-npm-minor:
  stage: publish
  when: manual
  only:
    - master
  script:
    - git config --global user.email "ghpages@gitlab"
    - git config --global user.name "Gitlab CI"
    - git remote set-url origin ${GH_REPO}
    - git checkout master
    - yarn version --minor
    - yarn build
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
    - npm publish

publish-npm-major:
  stage: publish
  when: manual
  only:
    - master
  script:
    - git config --global user.email "ghpages@gitlab"
    - git config --global user.name "Gitlab CI"
    - git remote set-url origin ${GH_REPO}
    - git checkout master
    - yarn version --major
    - yarn build
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
    - npm publish
